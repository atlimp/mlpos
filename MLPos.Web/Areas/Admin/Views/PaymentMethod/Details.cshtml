@using MLPos.Web.Models
@using MLPos.Web.Utils
@model PaymentMethodDetailsViewModel
@{
    Layout = "_Admin_Layout";
    ViewData["Title"] = Model.PaymentMethod?.Name ?? "New Payment method";
    string imageSrc = Model.PaymentMethod == null ? Url.Content("~/img/default.jpg") : Model.PaymentMethod.Image;
    
    if (string.IsNullOrEmpty(imageSrc))
    {
        imageSrc = Url.Content("~/img/default.jpg");
    }
    
    string submitBtnText = Model.PaymentMethod == null ? "Create" : "Update";

    string formAction = Model.PaymentMethod == null ? @Url.Action("Edit") : @Url.Action("Edit", "PaymentMethod", new { id = Model.PaymentMethod.Id });
}

@section Styles {
    <link rel="stylesheet" href="~/css/PaymentMethods.css">
}
@if (Model.ValidationErrors != null && Model.ValidationErrors.Any())
{
    <div class="validationErrors">
        @foreach (var error in Model.ValidationErrors)
        {
            <p>@error.Error</p>
        }
    </div>
    
}
<form class="editForm" method="POST" action="@formAction" enctype="multipart/form-data">
    <div class="detailsContainer">
        @Html.ImageOrDefault(Model.PaymentMethod?.Image)
        <div>
            @if (Model.Editing)
            {
                <label class="inputLabel" for="image">
                    Image:
                    <input type="file" name="image" id="image"/>
                </label>
            }
            <label class="inputLabel" for="name">
                Name:
                @Html.TextBoxFor(m => m.PaymentMethod.Name, new { id = "name" }.ConditionalProp(!Model.Editing, "disabled", "disabled"))
            </label>
            <label class="inputLabel" for="description">
                Description:
                @Html.TextAreaFor(m => m.PaymentMethod.Description, new { id = "description" }.ConditionalProp(!Model.Editing, "disabled", "disabled"))
            </label>

            @if (Model.PaymentMethod != null && Model.PaymentMethod.DateInserted != DateTime.MinValue)
            {
                <p>Payment method created at @Model.PaymentMethod.DateInserted</p>
            }
            @if (Model.PaymentMethod != null && Model.PaymentMethod.DateUpdated != DateTime.MinValue && Model.PaymentMethod.DateInserted != Model.PaymentMethod?.DateUpdated)
            {
                <p>Payment method last updated at @Model.PaymentMethod.DateUpdated</p>
            }
        </div>
    </div>

    <div class="formButtons">
        <a class="button buttonSecondary" href="@Url.Action("Index")">Back</a>
        
        @if (!Model.Editing)
        {
            <a class="button buttonPrimary" href="@formAction">Edit</a>
        }
        else
        {
            <button class="button buttonPrimary" type="submit">@submitBtnText</button>
        }
    </div>
    @Html.CheckBoxFor(m => m.NewPaymentMethod, new { hidden = "hidden", @checked = Model.NewPaymentMethod })
    @Html.TextBoxFor(m => m.PaymentMethod.Id, new { hidden = "hidden" })
    @Html.TextBoxFor(m => m.PaymentMethod.Image, new { hidden = "hidden" })
</form>

@if (Model.Editing && !Model.NewPaymentMethod)
{
    <form method="post" action="@Url.Action("Delete", "Customer", new { id = Model.PaymentMethod.Id })">
        <button class="button buttonSecondary">Delete Customer</button>
    </form>
}

@using MLPos.Web.Models
@using MLPos.Core.Model
@using MLPos.Web.Utils
@using Microsoft.Extensions.Localization
@using MLPos.Web
@inject IStringLocalizer<SharedResources> SharedLocalizer
@model GenerateInvoiceViewModel
@{
    Layout = "_Admin_Layout";
    ViewData["Title"] = SharedLocalizer["GenerateInvoice"];

    Dictionary<long, string> customers = new Dictionary<long, string>();
    customers.Add(-1, "");
    foreach (Customer customer in Model.Customers)
    {
        customers[customer.Id] = customer.Name;
    }

    Dictionary<long, string> paymentMethods = new Dictionary<long, string>();
    paymentMethods.Add(-1, "");
    foreach (PaymentMethod paymentMethod in Model.PaymentMethods)
    {
        paymentMethods[paymentMethod.Id] = paymentMethod.Name;
    }
}

@section Styles {
    <link rel="stylesheet" href="~/css/Invoices.css">
}

@section Scripts {
    <script src="~/js/search.js"></script>
    <script type="text/javascript">
        const customerLookupList = document.querySelector('#customerLookupList');
        const customerSearchInput = document.querySelector('#customerLookupInput');
        new Search({
            searchInput: customerSearchInput,
            listElement: customerLookupList,
            cardClassName: '.customerLookupCard',
            hideClassName: 'hideCard',
            lookupClasses: [ '.customerLookupName', '.customerLookupEmail' ]
        });

        const paymentMethodLookupList = document.querySelector('#paymentMethodLookupList');
        const paymentMethodSearchInput = document.querySelector('#paymentMethodLookupInput');
        new Search({
            searchInput: paymentMethodSearchInput,
            listElement: paymentMethodLookupList,
            cardClassName: '.paymentMethodLookupCard',
            hideClassName: 'hideCard',
            lookupClasses: [ '.paymentMethodLookupName' ]
        });

        customerSearchInput.addEventListener('focus', () => {
            customerLookupList.classList.remove('hidden');
        });

        const customerSelected = (id, name) => {
            customerSearchInput.value = name;
            document.querySelector('#customerId').value = id;
            customerLookupList.classList.add('hidden');
        }

        paymentMethodSearchInput.addEventListener('focus', () => {
            paymentMethodLookupList.classList.remove('hidden');
        });

        const paymentMethodSelected = (id, name) => {
            paymentMethodSearchInput.value = name;
            document.querySelector('#paymentMethodId').value = id;
            paymentMethodLookupList.classList.add('hidden');
        }
    </script>
}


<div class="container pageContainer">
    <div class="container titleContainer" id="generateInvoiceTitle">
        <div>
            <h1>@SharedLocalizer["GenerateInvoice"]</h1>
        </div>
    </div>
    <div class="container pageContentContainer">
        <div class="container formContainer">
            <ul class="validationErrors">
                @if (Model.ValidationErrors != null && Model.ValidationErrors.Any())
                {
                    @foreach (var error in Model.ValidationErrors)
                    {
                        <li>@error.Error</li>
                    }
                }
            </ul>
            <form class="editForm" method="POST">
                <div class="container detailsContainer">
                    <div>
                        <label class="inputLabel" for="customerId">
                            @SharedLocalizer["Customer"]:
                            @Html.TextBoxFor(m => m.SelectedCustomerId, new { id = "customerId", @class = "formInput", required = true, hidden = "hidden" })
                            <input type="text" id="customerLookupInput" class="lookupInput" value="@Model.Customers.FirstOrDefault(c => c.Id == Model.SelectedCustomerId)?.Name" />
                            <div class="container lookupContainer hidden" id="customerLookupList">
                                @foreach (Customer customer in Model.Customers) {
                                    <div class="container lookupCard customerLookupCard" onclick="(() => customerSelected(@customer.Id, '@customer.Name'))()">
                                        <div class="lookupCardImageContainer">
                                            <img src="@customer.Image" class="lookupCardImage"/>
                                        </div>
                                        <div class="lookupCardDetails">
                                            <div class="lookupCardTitle customerLookupName">@customer.Name</div>
                                            <div class="lookupCardSubTitle customerLookupEmail">@customer.Email</div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </label>
                        <label class="inputLabel" for="paymentMethodId">
                            @SharedLocalizer["PaymentMethod"]:
                            @Html.TextBoxFor(m => m.SelectedPaymentMethodId, new { id = "paymentMethodId", @class = "formInput", required = true, hidden = "hidden" })
                            <input type="text" id="paymentMethodLookupInput" class="lookupInput" value="@Model.PaymentMethods.FirstOrDefault(c => c.Id == Model.SelectedPaymentMethodId)?.Name" />
                            <div class="container lookupContainer hidden" id="paymentMethodLookupList">
                                @foreach (PaymentMethod paymentMethod in Model.PaymentMethods)
                                {
                                    <div class="container lookupCard paymentMethodLookupCard" onclick="(() => paymentMethodSelected(@paymentMethod.Id, '@paymentMethod.Name'))()">
                                        <div class="lookupCardImageContainer">
                                            <img src="@paymentMethod.Image" class="lookupCardImage" />
                                        </div>
                                        <div class="lookupCardDetails">
                                            <div class="lookupCardTitle paymentMethodLookupName">@paymentMethod.Name</div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </label>
                        <label class="inputLabel" for="dateFrom">
                            @SharedLocalizer["DateFrom"]:
                            @Html.TextBoxFor(m => m.Period.DateFrom, new { id = "dateFrom", @class = "formInput", Type = "date", required = true })
                        </label>
                        <label class="inputLabel" for="dateTo">
                            @SharedLocalizer["DateTo"]:
                            @Html.TextBoxFor(m => m.Period.DateTo, new { id = "dateTo", @class = "formInput", Type = "date", required = true })
                        </label>
                    </div>
                </div>

                <div class="formButtons">
                    <a class="button buttonSecondary formButton" href="@Url.Action("Index")">@SharedLocalizer["Back"]</a>
                    <button class="button buttonPrimary formButton" type="submit">@SharedLocalizer["GenerateInvoice"]</button>
                </div>
            </form>
        </div>
    </div>
</div>